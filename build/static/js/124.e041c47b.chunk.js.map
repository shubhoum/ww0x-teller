{"version":3,"file":"static/js/124.e041c47b.chunk.js","mappings":"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","sources":["../node_modules/@teller-protocol/teller-widget/lib/ccip-VXCpIJqn.js"],"sourcesContent":["import { B as BaseError, b as getUrl, s as stringify, i as isAddress, I as InvalidAddressError, d as decodeErrorResult, e as call, f as concat, h as encodeAbiParameters, H as HttpRequestError, j as isHex } from './index-ChJYhuDB.js';\nimport 'react/jsx-runtime';\nimport '@tanstack/react-query';\nimport 'react';\nimport 'alchemy-sdk';\nimport 'react-dom';\nimport '@teller-protocol/v2-contracts/build/hardhat/contracts.json';\nimport 'graphql-request';\nimport 'crypto';\n\nclass OffchainLookupError extends BaseError {\n    constructor({ callbackSelector, cause, data, extraData, sender, urls, }) {\n        super(cause.shortMessage ||\n            'An error occurred while fetching for an offchain result.', {\n            cause,\n            metaMessages: [\n                ...(cause.metaMessages || []),\n                cause.metaMessages?.length ? '' : [],\n                'Offchain Gateway Call:',\n                urls && [\n                    '  Gateway URL(s):',\n                    ...urls.map((url) => `    ${getUrl(url)}`),\n                ],\n                `  Sender: ${sender}`,\n                `  Data: ${data}`,\n                `  Callback selector: ${callbackSelector}`,\n                `  Extra data: ${extraData}`,\n            ].flat(),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'OffchainLookupError'\n        });\n    }\n}\nclass OffchainLookupResponseMalformedError extends BaseError {\n    constructor({ result, url }) {\n        super('Offchain gateway response is malformed. Response data must be a hex value.', {\n            metaMessages: [\n                `Gateway URL: ${getUrl(url)}`,\n                `Response: ${stringify(result)}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'OffchainLookupResponseMalformedError'\n        });\n    }\n}\nclass OffchainLookupSenderMismatchError extends BaseError {\n    constructor({ sender, to }) {\n        super('Reverted sender address does not match target contract address (`to`).', {\n            metaMessages: [\n                `Contract address: ${to}`,\n                `OffchainLookup sender address: ${sender}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'OffchainLookupSenderMismatchError'\n        });\n    }\n}\n\nfunction isAddressEqual(a, b) {\n    if (!isAddress(a, { strict: false }))\n        throw new InvalidAddressError({ address: a });\n    if (!isAddress(b, { strict: false }))\n        throw new InvalidAddressError({ address: b });\n    return a.toLowerCase() === b.toLowerCase();\n}\n\nconst offchainLookupSignature = '0x556f1830';\nconst offchainLookupAbiItem = {\n    name: 'OffchainLookup',\n    type: 'error',\n    inputs: [\n        {\n            name: 'sender',\n            type: 'address',\n        },\n        {\n            name: 'urls',\n            type: 'string[]',\n        },\n        {\n            name: 'callData',\n            type: 'bytes',\n        },\n        {\n            name: 'callbackFunction',\n            type: 'bytes4',\n        },\n        {\n            name: 'extraData',\n            type: 'bytes',\n        },\n    ],\n};\nasync function offchainLookup(client, { blockNumber, blockTag, data, to, }) {\n    const { args } = decodeErrorResult({\n        data,\n        abi: [offchainLookupAbiItem],\n    });\n    const [sender, urls, callData, callbackSelector, extraData] = args;\n    try {\n        if (!isAddressEqual(to, sender))\n            throw new OffchainLookupSenderMismatchError({ sender, to });\n        const result = await ccipFetch({ data: callData, sender, urls });\n        const { data: data_ } = await call(client, {\n            blockNumber,\n            blockTag,\n            data: concat([\n                callbackSelector,\n                encodeAbiParameters([{ type: 'bytes' }, { type: 'bytes' }], [result, extraData]),\n            ]),\n            to,\n        });\n        return data_;\n    }\n    catch (err) {\n        throw new OffchainLookupError({\n            callbackSelector,\n            cause: err,\n            data,\n            extraData,\n            sender,\n            urls,\n        });\n    }\n}\nasync function ccipFetch({ data, sender, urls, }) {\n    let error = new Error('An unknown error occurred.');\n    for (let i = 0; i < urls.length; i++) {\n        const url = urls[i];\n        const method = url.includes('{data}') ? 'GET' : 'POST';\n        const body = method === 'POST' ? { data, sender } : undefined;\n        try {\n            const response = await fetch(url.replace('{sender}', sender).replace('{data}', data), {\n                body: JSON.stringify(body),\n                method,\n            });\n            let result;\n            if (response.headers.get('Content-Type')?.startsWith('application/json')) {\n                result = (await response.json()).data;\n            }\n            else {\n                result = (await response.text());\n            }\n            if (!response.ok) {\n                error = new HttpRequestError({\n                    body,\n                    details: result?.error\n                        ? stringify(result.error)\n                        : response.statusText,\n                    headers: response.headers,\n                    status: response.status,\n                    url,\n                });\n                continue;\n            }\n            if (!isHex(result)) {\n                error = new OffchainLookupResponseMalformedError({\n                    result,\n                    url,\n                });\n                continue;\n            }\n            return result;\n        }\n        catch (err) {\n            error = new HttpRequestError({\n                body,\n                details: err.message,\n                url,\n            });\n        }\n    }\n    throw error;\n}\n\nexport { ccipFetch, offchainLookup, offchainLookupAbiItem, offchainLookupSignature };\n"],"names":["OffchainLookupError","_BaseError","_inherits","_super","_createSuper","_ref","_cause$metaMessages","_this","callbackSelector","cause","data","extraData","sender","urls","_classCallCheck","call","shortMessage","metaMessages","concat","_toConsumableArray","length","map","url","getUrl","flat","Object","defineProperty","_assertThisInitialized","enumerable","configurable","writable","value","_createClass","BaseError","OffchainLookupResponseMalformedError","_BaseError2","_super2","_ref2","_this2","result","stringify","OffchainLookupSenderMismatchError","_BaseError3","_super3","_ref3","_this3","to","isAddressEqual","a","b","isAddress","strict","InvalidAddressError","address","toLowerCase","offchainLookupSignature","offchainLookupAbiItem","name","type","inputs","offchainLookup","_x","_x2","_offchainLookup","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","client","_ref4","blockNumber","blockTag","_decodeErrorResult","args","_args","callData","_yield$call","data_","wrap","_context","prev","next","decodeErrorResult","abi","_slicedToArray","ccipFetch","sent","encodeAbiParameters","abrupt","t0","stop","_x3","_ccipFetch","_callee2","_ref5","error","i","method","body","_response$headers$get","response","_result","_context2","Error","includes","undefined","fetch","replace","JSON","headers","get","startsWith","json","text","ok","HttpRequestError","details","statusText","status","isHex","message"],"sourceRoot":""}